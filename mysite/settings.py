"""
Django settings for mysite project.
Generated by 'django-admin startproject' using Django 5.2.
For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/
import os
import json                                     # for json.loads()
from dotenv import load_dotenv
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = "moved to mysite/.env"
SECRET_KEY = os.getenv("SECRET_KEY")    #reading from .env

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
#DEBUG = False
DEBUG = (os.getenv("DEBUG") == "True")   # reading from .env: this converts a string into a boolean

#ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS = json.loads(os.getenv("ALLOWED_HOSTS"))   # reading from .env: this converts a string into a list

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
# Extensions - installed with requirements.txt
    "django_extensions",      
    "crispy_forms",
    "crispy_bootstrap5",  # Optional: Use Bootstrap 5 layout
# Apps 
   "home.apps.HomeConfig",  # the global login.html will be found before this login.html
    "polls.apps.PollsConfig",
    "polls2.apps.Polls2Config",
    "views.apps.ViewsConfig",
    "views2.apps.Views2Config",
    "tmpl.apps.TmplConfig",
    "route.apps.RouteConfig",
    "gview.apps.GviewConfig",
    "getpost.apps.GetpostConfig",
    "session.apps.SessionConfig",
    "accounts.apps.AccountsConfig",  # this login.html will be ignored if one is already found
    "authz.apps.AuthzConfig",
    "form.apps.FormConfig",
    "autos.apps.AutosConfig",
    "autos2.apps.Autos2Config",
    "bookone.apps.BookoneConfig",
    "cats.apps.CatsConfig",
    "myarts.apps.MyartsConfig",
    "crispy.apps.CrispyConfig",
    "menu.apps.MenuConfig",
    "bookmany.apps.BookmanyConfig",
    "many.apps.ManyConfig",
]

# When we get to crispy forms :)
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "mysite.urls"

# I added this
LOGIN_REDIRECT_URL = '/'  # or whatever view you want

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mysite.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

#TIME_ZONE = "UTC"
TIME_ZONE = "Asia/Tokyo"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
